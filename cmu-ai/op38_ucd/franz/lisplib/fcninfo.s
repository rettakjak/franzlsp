bind_org:
	linker_size = 	0
	trans_size = 	0
	.long	99
	.long	99
	.long	99
	.long	99
	.long	99
	.long	99
	.long	99
	.long	99
	.long	99
	.long	99
	.long	99
	.long	99
	.long	99
	.long	99
	.long	99
	.long	99
	.long	99
	.long -1
lit_org:
.ascii "(setq fcn-in-fcninfo.l \"fcninfo.l compiled by Liszt 68000 ve"
.asciz "rsion 8.39a on Fri Dec 15 18:56:19 1989\")"
.ascii "(setq rcs-fcninfo- \"$Header: fcninfo.l,v 1.2 84/01/29 23:39:"
.asciz "00 layer Exp $\")"
.ascii "((lambda (fcninfo) (putprop (quote baktrace) fcninfo (quote "
.ascii "fcn-info)) (putprop (quote fork) fcninfo (quote fcn-info)) ("
.ascii "putprop (quote oblist) fcninfo (quote fcn-info)) (putprop (q"
.ascii "uote ptime) fcninfo (quote fcn-info)) (putprop (quote reset)"
.ascii " fcninfo (quote fcn-info)) (putprop (quote resetio) fcninfo "
.ascii "(quote fcn-info)) (putprop (quote zapline) fcninfo (quote fc"
.asciz "n-info))) (quote ((0 . 0) \" defined in C-coded kernel\")))"
.ascii "((lambda (fcninfo) (putprop (quote arg) fcninfo (quote fcn-i"
.ascii "nfo)) (putprop (quote close) fcninfo (quote fcn-info)) (putp"
.ascii "rop (quote drain) fcninfo (quote fcn-info)) (putprop (quote "
.ascii "dumplisp) fcninfo (quote fcn-info)) (putprop (quote exit) fc"
.ascii "ninfo (quote fcn-info)) (putprop (quote gensym) fcninfo (quo"
.ascii "te fcn-info)) (putprop (quote monitor) fcninfo (quote fcn-in"
.ascii "fo)) (putprop (quote nwritn) fcninfo (quote fcn-info)) (putp"
.ascii "rop (quote random) fcninfo (quote fcn-info)) (putprop (quote"
.ascii " return) fcninfo (quote fcn-info)) (putprop (quote terpr) fc"
.ascii "ninfo (quote fcn-info)) (putprop (quote time-string) fcninfo"
.ascii " (quote fcn-info)) (putprop (quote tyipeek) fcninfo (quote f"
.asciz "cn-info))) (quote ((0 . 1) \" defined in C-coded kernel\")))"
.ascii "((lambda (fcninfo) (putprop (quote err) fcninfo (quote fcn-i"
.ascii "nfo)) (putprop (quote ratom) fcninfo (quote fcn-info)) (putp"
.ascii "rop (quote read) fcninfo (quote fcn-info)) (putprop (quote r"
.ascii "eadc) fcninfo (quote fcn-info)) (putprop (quote tyi) fcninfo"
.ascii " (quote fcn-info))) (quote ((0 . 2) \" defined in C-coded ker"
.asciz "nel\")))"
.ascii "((lambda (fcninfo) (putprop (quote +) fcninfo (quote fcn-inf"
.ascii "o)) (putprop (quote -) fcninfo (quote fcn-info)) (putprop (q"
.ascii "uote *) fcninfo (quote fcn-info)) (putprop (quote /) fcninfo"
.ascii " (quote fcn-info)) (putprop (quote and) fcninfo (quote fcn-i"
.ascii "nfo)) (putprop (quote concat) fcninfo (quote fcn-info)) (put"
.ascii "prop (quote cond) fcninfo (quote fcn-info)) (putprop (quote "
.ascii "difference) fcninfo (quote fcn-info)) (putprop (quote greate"
.ascii "rp) fcninfo (quote fcn-info)) (putprop (quote lessp) fcninfo"
.ascii " (quote fcn-info)) (putprop (quote list) fcninfo (quote fcn-"
.ascii "info)) (putprop (quote or) fcninfo (quote fcn-info)) (putpro"
.ascii "p (quote plus) fcninfo (quote fcn-info)) (putprop (quote pro"
.ascii "duct) fcninfo (quote fcn-info)) (putprop (quote prog) fcninf"
.ascii "o (quote fcn-info)) (putprop (quote quotient) fcninfo (quote"
.ascii " fcn-info)) (putprop (quote setq) fcninfo (quote fcn-info)) "
.ascii "(putprop (quote sum) fcninfo (quote fcn-info)) (putprop (quo"
.ascii "te times) fcninfo (quote fcn-info)) (putprop (quote unconcat"
.ascii ") fcninfo (quote fcn-info))) (quote (nil \" defined in C-code"
.asciz "d kernel\")))"
.ascii "((lambda (fcninfo) (putprop (quote \\1+) fcninfo (quote fcn-i"
.ascii "nfo)) (putprop (quote \\1-) fcninfo (quote fcn-info)) (putpro"
.ascii "p (quote absval) fcninfo (quote fcn-info)) (putprop (quote a"
.ascii "dd1) fcninfo (quote fcn-info)) (putprop (quote aexplode) fcn"
.ascii "info (quote fcn-info)) (putprop (quote aexplodec) fcninfo (q"
.ascii "uote fcn-info)) (putprop (quote aexploden) fcninfo (quote fc"
.ascii "n-info)) (putprop (quote argv) fcninfo (quote fcn-info)) (pu"
.ascii "tprop (quote arrayp) fcninfo (quote fcn-info)) (putprop (quo"
.ascii "te ascii) fcninfo (quote fcn-info)) (putprop (quote asin) fc"
.ascii "ninfo (quote fcn-info)) (putprop (quote acos) fcninfo (quote"
.ascii " fcn-info)) (putprop (quote atom) fcninfo (quote fcn-info)) "
.ascii "(putprop (quote bcdp) fcninfo (quote fcn-info)) (putprop (qu"
.ascii "ote bignum-to-list) fcninfo (quote fcn-info)) (putprop (quot"
.ascii "e boundp) fcninfo (quote fcn-info)) (putprop (quote car) fcn"
.ascii "info (quote fcn-info)) (putprop (quote cdr) fcninfo (quote f"
.ascii "cn-info)) (putprop (quote chdir) fcninfo (quote fcn-info)) ("
.ascii "putprop (quote cos) fcninfo (quote fcn-info)) (putprop (quot"
.ascii "e dtpr) fcninfo (quote fcn-info)) (putprop (quote exp) fcnin"
.ascii "fo (quote fcn-info)) (putprop (quote fact) fcninfo (quote fc"
.ascii "n-info)) (putprop (quote fake) fcninfo (quote fcn-info)) (pu"
.ascii "tprop (quote fix) fcninfo (quote fcn-info)) (putprop (quote "
.ascii "float) fcninfo (quote fcn-info)) (putprop (quote frexp) fcni"
.ascii "nfo (quote fcn-info)) (putprop (quote function) fcninfo (quo"
.ascii "te fcn-info)) (putprop (quote get_pname) fcninfo (quote fcn-"
.ascii "info)) (putprop (quote getaccess) fcninfo (quote fcn-info)) "
.ascii "(putprop (quote getaux) fcninfo (quote fcn-info)) (putprop ("
.ascii "quote getd) fcninfo (quote fcn-info)) (putprop (quote getdat"
.ascii "a) fcninfo (quote fcn-info)) (putprop (quote getdelta) fcnin"
.ascii "fo (quote fcn-info)) (putprop (quote getentry) fcninfo (quot"
.ascii "e fcn-info)) (putprop (quote getenv) fcninfo (quote fcn-info"
.ascii ")) (putprop (quote getdisc) fcninfo (quote fcn-info)) (putpr"
.ascii "op (quote getlength) fcninfo (quote fcn-info)) (putprop (quo"
.ascii "te go) fcninfo (quote fcn-info)) (putprop (quote haulong) fc"
.ascii "ninfo (quote fcn-info)) (putprop (quote infile) fcninfo (quo"
.ascii "te fcn-info)) (putprop (quote log) fcninfo (quote fcn-info))"
.ascii " (putprop (quote implode) fcninfo (quote fcn-info)) (putprop"
.ascii " (quote intern) fcninfo (quote fcn-info)) (putprop (quote ma"
.ascii "knam) fcninfo (quote fcn-info)) (putprop (quote maknum) fcni"
.ascii "nfo (quote fcn-info)) (putprop (quote makunbound) fcninfo (q"
.ascii "uote fcn-info)) (putprop (quote minus) fcninfo (quote fcn-in"
.ascii "fo)) (putprop (quote minusp) fcninfo (quote fcn-info)) (putp"
.ascii "rop (quote not) fcninfo (quote fcn-info)) (putprop (quote nc"
.ascii "ons) fcninfo (quote fcn-info)) (putprop (quote null) fcninfo"
.ascii " (quote fcn-info)) (putprop (quote numberp) fcninfo (quote f"
.ascii "cn-info)) (putprop (quote onep) fcninfo (quote fcn-info)) (p"
.ascii "utprop (quote plist) fcninfo (quote fcn-info)) (putprop (quo"
.ascii "te pntlen) fcninfo (quote fcn-info)) (putprop (quote portp) "
.ascii "fcninfo (quote fcn-info)) (putprop (quote ptr) fcninfo (quot"
.ascii "e fcn-info)) (putprop (quote quote) fcninfo (quote fcn-info)"
.ascii ") (putprop (quote readlist) fcninfo (quote fcn-info)) (putpr"
.ascii "op (quote remob) fcninfo (quote fcn-info)) (putprop (quote *"
.ascii "rset) fcninfo (quote fcn-info)) (putprop (quote sin) fcninfo"
.ascii " (quote fcn-info)) (putprop (quote sizeof) fcninfo (quote fc"
.ascii "n-info)) (putprop (quote stringp) fcninfo (quote fcn-info)) "
.ascii "(putprop (quote sub1) fcninfo (quote fcn-info)) (putprop (qu"
.ascii "ote sqrt) fcninfo (quote fcn-info)) (putprop (quote symbolp)"
.ascii " fcninfo (quote fcn-info)) (putprop (quote truename) fcninfo"
.ascii " (quote fcn-info)) (putprop (quote type) fcninfo (quote fcn-"
.ascii "info)) (putprop (quote valuep) fcninfo (quote fcn-info)) (pu"
.ascii "tprop (quote zerop) fcninfo (quote fcn-info))) (quote ((1 . "
.asciz "1) \" defined in C-coded kernel\")))"
.ascii "((lambda (fcninfo) (putprop (quote errset) fcninfo (quote fc"
.ascii "n-info)) (putprop (quote flatc) fcninfo (quote fcn-info)) (p"
.ascii "utprop (quote outfile) fcninfo (quote fcn-info)) (putprop (q"
.ascii "uote patom) fcninfo (quote fcn-info)) (putprop (quote print)"
.ascii " fcninfo (quote fcn-info)) (putprop (quote status) fcninfo ("
.ascii "quote fcn-info)) (putprop (quote tyo) fcninfo (quote fcn-inf"
.ascii "o)) (putprop (quote untyi) fcninfo (quote fcn-info))) (quote"
.asciz " ((1 . 2) \" defined in C-coded kernel\")))"
.ascii "((lambda (fcninfo) (putprop (quote fasl) fcninfo (quote fcn-"
.ascii "info)) (putprop (quote load) fcninfo (quote fcn-info)) (putp"
.ascii "rop (quote process) fcninfo (quote fcn-info))) (quote ((1 . "
.asciz "3) \" defined in C-coded kernel\")))"
.ascii "((lambda (fcninfo) (putprop (quote funcall) fcninfo (quote f"
.ascii "cn-info)) (putprop (quote progv) fcninfo (quote fcn-info))) "
.asciz "(quote ((1) \" defined in C-coded kernel\")))"
.ascii "((lambda (fcninfo) (putprop (quote allocate) fcninfo (quote "
.ascii "fcn-info)) (putprop (quote alphalessp) fcninfo (quote fcn-in"
.ascii "fo)) (putprop (quote arrayref) fcninfo (quote fcn-info)) (pu"
.ascii "tprop (quote assq) fcninfo (quote fcn-info)) (putprop (quote"
.ascii " atan) fcninfo (quote fcn-info)) (putprop (quote bignum-left"
.ascii "shift) fcninfo (quote fcn-info)) (putprop (quote *catch) fcn"
.ascii "info (quote fcn-info)) (putprop (quote cons) fcninfo (quote "
.ascii "fcn-info)) (putprop (quote Divide) fcninfo (quote fcn-info))"
.ascii " (putprop (quote eq) fcninfo (quote fcn-info)) (putprop (quo"
.ascii "te equal) fcninfo (quote fcn-info)) (putprop (quote freturn)"
.ascii " fcninfo (quote fcn-info)) (putprop (quote get) fcninfo (quo"
.ascii "te fcn-info)) (putprop (quote haipart) fcninfo (quote fcn-in"
.ascii "fo)) (putprop (quote *invmod) fcninfo (quote fcn-info)) (put"
.ascii "prop (quote lsh) fcninfo (quote fcn-info)) (putprop (quote m"
.ascii "function) fcninfo (quote fcn-info)) (putprop (quote mod) fcn"
.ascii "info (quote fcn-info)) (putprop (quote *mod) fcninfo (quote "
.ascii "fcn-info)) (putprop (quote nthelem) fcninfo (quote fcn-info)"
.ascii ") (putprop (quote putaux) fcninfo (quote fcn-info)) (putprop"
.ascii " (quote putd) fcninfo (quote fcn-info)) (putprop (quote putd"
.ascii "ata) fcninfo (quote fcn-info)) (putprop (quote putdelta) fcn"
.ascii "info (quote fcn-info)) (putprop (quote putdisc) fcninfo (quo"
.ascii "te fcn-info)) (putprop (quote putlength) fcninfo (quote fcn-"
.ascii "info)) (putprop (quote remprop) fcninfo (quote fcn-info)) (p"
.ascii "utprop (quote replace) fcninfo (quote fcn-info)) (putprop (q"
.ascii "uote rot) fcninfo (quote fcn-info)) (putprop (quote rplaca) "
.ascii "fcninfo (quote fcn-info)) (putprop (quote rplacd) fcninfo (q"
.ascii "uote fcn-info)) (putprop (quote segment) fcninfo (quote fcn-"
.ascii "info)) (putprop (quote set) fcninfo (quote fcn-info)) (putpr"
.ascii "op (quote setarg) fcninfo (quote fcn-info)) (putprop (quote "
.ascii "setplist) fcninfo (quote fcn-info)) (putprop (quote scons) f"
.ascii "cninfo (quote fcn-info)) (putprop (quote signal) fcninfo (qu"
.ascii "ote fcn-info)) (putprop (quote sstatus) fcninfo (quote fcn-i"
.ascii "nfo)) (putprop (quote sticky-bignum-leftshift) fcninfo (quot"
.ascii "e fcn-info)) (putprop (quote *throw) fcninfo (quote fcn-info"
.ascii ")) (putprop (quote vref) fcninfo (quote fcn-info)) (putprop "
.ascii "(quote vrefi-byte) fcninfo (quote fcn-info)) (putprop (quote"
.ascii " vrefi-word) fcninfo (quote fcn-info)) (putprop (quote vrefi"
.ascii "-long) fcninfo (quote fcn-info))) (quote ((2 . 2) \" defined "
.asciz "in C-coded kernel\")))"
.ascii "((lambda (fcninfo) (putprop (quote apply) fcninfo (quote fcn"
.ascii "-info)) (putprop (quote def) fcninfo (quote fcn-info)) (putp"
.ascii "rop (quote mapc) fcninfo (quote fcn-info)) (putprop (quote m"
.ascii "apcan) fcninfo (quote fcn-info)) (putprop (quote mapcar) fcn"
.ascii "info (quote fcn-info)) (putprop (quote mapcon) fcninfo (quot"
.ascii "e fcn-info)) (putprop (quote maplist) fcninfo (quote fcn-inf"
.ascii "o)) (putprop (quote prog2) fcninfo (quote fcn-info))) (quote"
.asciz " ((1) \" defined in C-coded kernel\")))"
.ascii "((lambda (fcninfo) (putprop (quote putprop) fcninfo (quote f"
.asciz "cn-info))) (quote ((3 . 3) \" defined in C-coded kernel\")))"
.ascii "((lambda (fcninfo) (putprop (quote cfasl) fcninfo (quote fcn"
.asciz "-info))) (quote ((3 . 5) \" defined in C-coded kernel\")))"
.ascii "((lambda (fcninfo) (putprop (quote boole) fcninfo (quote fcn"
.asciz "-info))) (quote ((3) \" defined in C-coded kernel\")))"
.ascii "((lambda (fcninfo) (putprop (quote Emuldiv) fcninfo (quote f"
.asciz "cn-info))) (quote ((4 . 4) \" defined in C-coded kernel\")))"
.ascii "((lambda (fcninfo) (putprop (quote marray) fcninfo (quote fc"
.asciz "n-info))) (quote ((5 . 5) \" defined in C-coded kernel\")))"
lit_end:
.data | this is just for documentation 
.asciz "@(#)Compiled by Liszt 68000 version 8.39a on Fri Dec 15 18:56:45 1989"
.asciz "$Header: decl.l,v 1.8 83/08/28 17:13:00 layer Exp $"
.asciz "$Header: array.l,v 1.7 83/08/28 17:12:39 layer Exp $"
.asciz "$Header: vector.l,v 1.11 83/11/22 10:13:48 jkf Exp $"
.asciz "$Header: datab.l,v 1.5 83/08/28 17:14:27 layer Exp $"
.asciz "$Header: expr.l,v 1.12 83/09/06 21:46:46 layer Exp $"
.asciz "$Header: io.l,v 1.16 83/12/06 15:50:22 sklower Exp $"
.asciz "$Header: funa.l,v 1.11 83/08/28 17:14:35 layer Exp $"
.asciz "$Header: funb.l,v 1.12 83/08/28 17:14:58 layer Exp $"
.asciz "$Header: func.l,v 1.13 84/10/18 12:36:57 jkf Exp $"
.asciz "$Header: tlev.l,v 1.16 84/01/13 15:06:43 jkf Exp $"
.asciz "$Header: instr.l,v 1.7 84/01/05 18:40:55 jkf Exp $"
.asciz "$Header: fixnum.l,v 1.14 83/08/28 17:13:38 layer Exp $"
.asciz "$Header: util.l,v 1.14 83/08/28 17:13:11 layer Exp $"
